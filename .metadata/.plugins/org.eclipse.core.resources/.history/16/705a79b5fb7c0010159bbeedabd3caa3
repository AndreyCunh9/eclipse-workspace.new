function defineStructure() {
    addColumn("status");   // CÃ³digo HTTP ou "Erro"
    addColumn("mensagem"); // Retorno da API ou sucesso
    addColumn("erro");     // Mensagem de erro, se houver
}

function onSync(lastSyncDate) {}
function onMobileSync(user) {}

function createDataset(fields, constraints, sortFields) {
    var serviceCode = "API Protheus Full";
    var endpoint = "/uf_mata010"; // relativo Ã  URL base configurada no serviÃ§o
    var method = "POST";
    var params = "{}"; // corpo da requisiÃ§Ã£o JSON

    if (constraints) {
        constraints.forEach(function(c) {
            if (c.fieldName == "serviceCode") serviceCode = c.initialValue;
            if (c.fieldName == "endpoint") endpoint = c.initialValue;
            if (c.fieldName == "method") method = c.initialValue.toUpperCase();
            if (c.fieldName == "params") params = c.initialValue;
        });
    }

    var dataset = DatasetBuilder.newDataset();

    try {
        var serviceHelper = ServiceManager.getService(serviceCode);

        // ðŸ‘‰ chamada direta usando invokeServiceJSON
        var response = serviceHelper.invokeServiceJSON(
            endpoint,              // endpoint relativo
            params,                // corpo JSON
            method,                // POST, GET, etc.
            "application/json"     // Content-Type
        );

        log.info("Retorno Protheus: " + response);

        dataset.addRow(["200", response, ""]);

    } catch (e) {
        log.error("Erro ao chamar Protheus: " + e);
        dataset.addRow(["Erro", "", (e.message || e.toString())]);
    }

    return dataset;
}
